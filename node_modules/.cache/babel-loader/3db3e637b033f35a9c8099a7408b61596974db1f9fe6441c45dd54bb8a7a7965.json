{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Stuff\\\\XploitSim\\\\XploitSim\\\\src\\\\components\\\\AuthenticationSandbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../index.css';\nimport './VulnerabilityPage.css';\n\n/*\r\n  Authentication Sandbox (persistent + replay + attempt counters)\r\n  - Dynamic in-memory user store persisted to localStorage\r\n  - Remaining-attempts UI per user\r\n  - Manual login/register affects persisted store and attack log\r\n  - Async credential-stuffing simulator (start/stop) that respects lockouts\r\n  - Attack log persists; \"Replay\" feature replays entries step-by-step\r\n  - Console-style attack log with auto-scroll and timestamps\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_USERS_KEY = 'xploitsim_users_v1';\nconst LOCAL_LOG_KEY = 'xploitsim_attacklog_v1';\nconst DEFAULT_USERS = [{\n  username: 'alice',\n  password: 'Password@123',\n  attempts: 0,\n  lockedUntil: 0\n}, {\n  username: 'bob',\n  password: 'qwerty',\n  attempts: 0,\n  lockedUntil: 0\n}, {\n  username: 'admin',\n  password: 'admin123',\n  attempts: 0,\n  lockedUntil: 0\n}];\nconst MAX_ATTEMPTS = 5;\nconst LOCK_DURATION_MS = 60 * 1000; // 60 seconds lockout for demo\n\nexport default function AuthenticationSandbox() {\n  _s();\n  // persisted users & logs\n  const [users, setUsers] = useState(() => {\n    try {\n      const raw = localStorage.getItem(LOCAL_USERS_KEY);\n      if (raw) {\n        const parsed = JSON.parse(raw);\n        // ensure schema (old entries get defaults)\n        return parsed.map(u => ({\n          attempts: 0,\n          lockedUntil: 0,\n          ...u\n        }));\n      }\n    } catch (e) {\n      // ignore parse error\n    }\n    // fallback\n    return DEFAULT_USERS.slice();\n  });\n  const [attackLog, setAttackLog] = useState(() => {\n    try {\n      const raw = localStorage.getItem(LOCAL_LOG_KEY);\n      if (raw) return JSON.parse(raw);\n    } catch (e) {}\n    return []; // each entry: { ts, text }\n  });\n\n  // form + UI state\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('Try logging in. Hint: bob / qwerty or admin / admin123');\n  const [isSimulating, setIsSimulating] = useState(false);\n  const simCancelRef = useRef(false);\n  const consoleEndRef = useRef(null);\n  const consoleRef = useRef(null); // <-- new: ref to the scrollable console container\n\n  // Replay state\n  const [replayIndex, setReplayIndex] = useState(0);\n  const [isReplaying, setIsReplaying] = useState(false);\n  const replayTimerRef = useRef(null);\n  const REPLAY_INTERVAL_MS = 700;\n\n  // persist users & logs when changed\n  useEffect(() => {\n    try {\n      localStorage.setItem(LOCAL_USERS_KEY, JSON.stringify(users));\n    } catch (e) {}\n  }, [users]);\n  useEffect(() => {\n    try {\n      localStorage.setItem(LOCAL_LOG_KEY, JSON.stringify(attackLog));\n    } catch (e) {}\n  }, [attackLog]);\n\n  // Auto-scroll console on log update\n  useEffect(() => {\n    if (consoleEndRef.current) {\n      setTimeout(() => {\n        consoleEndRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }, 25);\n    }\n  }, [attackLog]);\n\n  // helper for lock checking & cleaning expired locks\n  function isCurrentlyLocked(user) {\n    if (!user || !user.lockedUntil) return false;\n    const now = Date.now();\n    if (user.lockedUntil > now) return true;\n    // expired => clear lock (reset attempts too)\n    updateUser(user.username, {\n      lockedUntil: 0,\n      attempts: 0\n    });\n    return false;\n  }\n\n  // push a timestamped log entry\n  function pushLog(text) {\n    const ts = new Date().toLocaleTimeString();\n    setAttackLog(prev => {\n      const next = [...prev, {\n        ts,\n        text\n      }];\n      return next;\n    });\n  }\n\n  // update a single user's fields by username\n  function updateUser(uname, fields) {\n    setUsers(prev => prev.map(u => u.username === uname ? {\n      ...u,\n      ...fields\n    } : u));\n  }\n\n  // add user (register)\n  function addUser(uname, pwd) {\n    setUsers(prev => {\n      if (prev.some(u => u.username === uname)) return prev;\n      return [...prev, {\n        username: uname,\n        password: pwd,\n        attempts: 0,\n        lockedUntil: 0\n      }];\n    });\n  }\n\n  // masked user view for UI (remaining attempts, locked flag)\n  function maskedUsers() {\n    return users.map(u => {\n      const pw = u.password || '';\n      const masked = pw.length <= 2 ? pw : pw[0] + '*'.repeat(Math.max(0, pw.length - 2)) + pw.slice(-1);\n      const attempts = u.attempts || 0;\n      const remaining = Math.max(0, MAX_ATTEMPTS - attempts);\n      const lockedNow = (u.lockedUntil || 0) > Date.now();\n      return {\n        username: u.username,\n        masked,\n        remaining,\n        lockedNow,\n        attempts: attempts,\n        lockedUntil: u.lockedUntil || 0\n      };\n    });\n  }\n\n  // Manual login handler\n  function handleLogin(e) {\n    var _e$preventDefault;\n    e === null || e === void 0 ? void 0 : (_e$preventDefault = e.preventDefault) === null || _e$preventDefault === void 0 ? void 0 : _e$preventDefault.call(e);\n    const uname = username.trim();\n    if (!uname) {\n      setMessage('Enter a username.');\n      return;\n    }\n    const user = users.find(u => u.username === uname);\n    if (user && isCurrentlyLocked(user)) {\n      setMessage('🔒 Account locked (simulated).');\n      pushLog(`Attempted login for ${uname} while locked`);\n      return;\n    }\n    if (!user) {\n      setMessage('❌ Unknown user.');\n      pushLog(`Failed login attempt: ${uname} (unknown user)`);\n      return;\n    }\n    if (user.password === password) {\n      setMessage(`✅ Welcome, ${uname}! (Simulated login)`);\n      pushLog(`Successful login: ${uname}`);\n      // reset attempts on success\n      updateUser(uname, {\n        attempts: 0,\n        lockedUntil: 0\n      });\n    } else {\n      // failure: increment attempts\n      const newAttempts = (user.attempts || 0) + 1;\n      if (newAttempts >= MAX_ATTEMPTS) {\n        const until = Date.now() + LOCK_DURATION_MS;\n        updateUser(uname, {\n          attempts: newAttempts,\n          lockedUntil: until\n        });\n        setMessage('🔒 Too many failed attempts — account locked (simulated).');\n        pushLog(`Failed login attempt: ${uname} (attempt ${newAttempts})`);\n        pushLog(`Account ${uname} locked until ${new Date(until).toLocaleTimeString()}`);\n      } else {\n        updateUser(uname, {\n          attempts: newAttempts\n        });\n        setMessage('❌ Invalid username or password.');\n        pushLog(`Failed login attempt: ${uname} (attempt ${newAttempts})`);\n      }\n    }\n  }\n\n  // Register (in-memory)\n  function handleRegister(e) {\n    var _e$preventDefault2;\n    e === null || e === void 0 ? void 0 : (_e$preventDefault2 = e.preventDefault) === null || _e$preventDefault2 === void 0 ? void 0 : _e$preventDefault2.call(e);\n    const uname = username.trim();\n    if (!uname || !password) {\n      setMessage('Enter username and password to register.');\n      return;\n    }\n    if (users.some(u => u.username === uname)) {\n      setMessage('User already exists. Try another username.');\n      pushLog(`Registration failed: ${uname} already exists`);\n      return;\n    }\n    addUser(uname, password);\n    setMessage(`✅ Registered ${uname} (in-memory).`);\n    pushLog(`Registered new user: ${uname}`);\n  }\n\n  // Reset demo - clears attempts & logs but keeps registered users\n  function resetDemo() {\n    setUsers(prev => prev.map(u => ({\n      ...u,\n      attempts: 0,\n      lockedUntil: 0\n    })));\n    setAttackLog([]);\n    setMessage('Demo reset. Users retained (registered).');\n    setIsSimulating(false);\n    simCancelRef.current = false;\n    setReplayIndex(0);\n    setIsReplaying(false);\n    if (replayTimerRef.current) {\n      clearInterval(replayTimerRef.current);\n      replayTimerRef.current = null;\n    }\n    pushLog('Demo reset (attempts and log cleared).');\n  }\n\n  // Async credential stuffing simulation: respects lockouts and updates per-user attempts & locks\n  async function runCredentialStuffingAsync({\n    delayMs = 300\n  } = {}) {\n    const common = ['123456', 'password', 'qwerty', 'admin', 'admin123'];\n    // targets: current usernames plus a couple of extras\n    const targets = Array.from(new Set([...users.map(u => u.username), 'carol', 'dave']));\n    setIsSimulating(true);\n    simCancelRef.current = false;\n    pushLog('--- Credential Stuffing Simulation started ---');\n    for (const t of targets) {\n      if (simCancelRef.current) break;\n\n      // fetch fresh user snapshot from state\n      const freshUser = users.find(u => u.username === t);\n\n      // If user exists and locked, log as locked and skip tries for this user\n      if (freshUser && isCurrentlyLocked(freshUser)) {\n        pushLog(`${t}: <LOCKED> (simulation respects lockout)`);\n        continue;\n      }\n      for (const pw of common) {\n        if (simCancelRef.current) break;\n        await new Promise(r => setTimeout(r, delayMs));\n\n        // refetch user in case manual actions changed the store\n        const u = users.find(x => x.username === t);\n        if (!u) {\n          pushLog(`${t}:${pw} -> FAIL (no such user)`);\n          continue;\n        }\n        if (isCurrentlyLocked(u)) {\n          pushLog(`${t}:${pw} -> FAIL (LOCKED)`);\n          continue;\n        }\n        if (u.password === pw) {\n          // success: reset attempts and log success\n          updateUser(u.username, {\n            attempts: 0,\n            lockedUntil: 0\n          });\n          pushLog(`${t}:${pw} -> SUCCESS`);\n        } else {\n          // failed attempt: increment attempts & maybe lock\n          const newAttempts = (u.attempts || 0) + 1;\n          if (newAttempts >= MAX_ATTEMPTS) {\n            const until = Date.now() + LOCK_DURATION_MS;\n            updateUser(u.username, {\n              attempts: newAttempts,\n              lockedUntil: until\n            });\n            pushLog(`${t}:${pw} -> FAIL (attempt ${newAttempts})`);\n            pushLog(`${t} locked until ${new Date(until).toLocaleTimeString()}`);\n          } else {\n            updateUser(u.username, {\n              attempts: newAttempts\n            });\n            pushLog(`${t}:${pw} -> FAIL (attempt ${newAttempts})`);\n          }\n        }\n      }\n    }\n    if (simCancelRef.current) {\n      pushLog('--- Credential Stuffing Simulation stopped by user ---');\n    } else {\n      pushLog('--- Credential Stuffing Simulation completed ---');\n    }\n    setIsSimulating(false);\n    simCancelRef.current = false;\n  }\n  function startSimulation() {\n    if (isSimulating) return;\n    // ensure we use fresh users state inside async loop by referencing state variable inside loop — okay because we re-read users on each iteration\n    runCredentialStuffingAsync({\n      delayMs: 240\n    }).catch(err => {\n      pushLog(`Simulation error: ${String(err)}`);\n      setIsSimulating(false);\n      simCancelRef.current = false;\n    });\n  }\n  function stopSimulation() {\n    if (!isSimulating) return;\n    simCancelRef.current = true;\n    setIsSimulating(false);\n  }\n\n  // Replay controls\n  function playReplay() {\n    if (isReplaying || attackLog.length === 0) return;\n    setIsReplaying(true);\n    setReplayIndex(0);\n    replayTimerRef.current = setInterval(() => {\n      setReplayIndex(prev => {\n        const next = prev + 1;\n        if (next >= attackLog.length) {\n          clearInterval(replayTimerRef.current);\n          replayTimerRef.current = null;\n          setIsReplaying(false);\n          return attackLog.length;\n        }\n        return next;\n      });\n    }, REPLAY_INTERVAL_MS);\n  }\n  function pauseReplay() {\n    if (replayTimerRef.current) {\n      clearInterval(replayTimerRef.current);\n      replayTimerRef.current = null;\n    }\n    setIsReplaying(false);\n  }\n  function stepReplay() {\n    setReplayIndex(prev => Math.min(attackLog.length, prev + 1));\n  }\n  function resetReplay() {\n    pauseReplay();\n    setReplayIndex(0);\n  }\n\n  // render a \"replay console\" that shows entries up to replayIndex\n  function renderReplayConsole() {\n    if (attackLog.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          opacity: 0.7\n        },\n        children: \"No entries to replay.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 14\n      }, this);\n    }\n    const shown = attackLog.slice(0, replayIndex);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: 'ui-monospace, Menlo, Monaco, monospace'\n      },\n      children: shown.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          opacity: 0.7\n        },\n        children: \"Replay paused (no entries shown yet).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 31\n      }, this) : shown.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#9ca3af'\n          },\n          children: [\"[\", e.ts, \"] \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: e.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 96\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this);\n  }\n\n  // small helper to clear persisted state entirely (dangerous) - used optionally in dev\n  function clearAllStorageAndReset() {\n    localStorage.removeItem(LOCAL_USERS_KEY);\n    localStorage.removeItem(LOCAL_LOG_KEY);\n    setUsers(DEFAULT_USERS.map(u => ({\n      ...u,\n      attempts: 0,\n      lockedUntil: 0\n    })));\n    setAttackLog([]);\n    setMessage('Cleared stored data; reset to defaults.');\n    setReplayIndex(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vp-page vp-auth-sandbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"vp-hero\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vp-hero-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vp-hero-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vp-badge\",\n            children: \"A02:2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"vp-title\",\n            children: \"Authentication Failures \\u2014 Sandbox (Persistent)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vp-subtitle\",\n            children: \"Dynamic users, persisted store, lockout-aware simulator, and replay controls. Runs in-browser only.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"vp-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vp-grid\",\n        style: {\n          maxWidth: 1100,\n          margin: '0 auto',\n          gap: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vp-card\",\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login / Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            className: \"vp-form\",\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"username\",\n              className: \"vp-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"password\",\n              className: \"vp-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vp-btn\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: handleRegister,\n                style: {\n                  marginLeft: 8,\n                  backgroundColor: '#444',\n                  color: 'white',\n                  border: '1px solid #777'\n                },\n                children: \"Register (in-memory)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: resetDemo,\n                style: {\n                  marginLeft: 8,\n                  backgroundColor: '#444',\n                  color: 'white',\n                  border: '1px solid #777'\n                },\n                children: \"Reset Demo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vp-note\",\n            style: {\n              marginTop: 10\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12,\n              display: 'flex',\n              justifyContent: 'center',\n              gap: 8\n            },\n            children: [!isSimulating ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-danger\",\n              onClick: startSimulation,\n              children: \"Start Credential Stuffing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-secondary\",\n              onClick: stopSimulation,\n              children: \"Stop Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-secondary\",\n              onClick: () => {\n                pushLog('Manual log entry added');\n              },\n              children: \"Ping Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Registered Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 10,\n                justifyContent: 'center',\n                marginTop: 8\n              },\n              children: maskedUsers().map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: 'rgba(255,255,255,0.02)',\n                  padding: '8px 12px',\n                  borderRadius: 10,\n                  minWidth: 110\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontWeight: 700\n                  },\n                  children: [u.username, u.lockedNow ? ' 🔒' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12,\n                    opacity: 0.9\n                  },\n                  children: u.masked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 6,\n                    fontSize: 13\n                  },\n                  children: [\"Attempts: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: u.attempts\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: 12,\n                      opacity: 0.8\n                    },\n                    children: [\"Remaining: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: u.remaining\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 36\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this)]\n              }, u.username, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-secondary\",\n              onClick: clearAllStorageAndReset,\n              children: \"Clear Stored Data (dev)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vp-card\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 8\n            },\n            children: \"Attack Log \\u2014 Console\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vp-log\",\n            style: {\n              background: '#0b1020',\n              color: '#d1d5db',\n              fontFamily: 'ui-monospace, Menlo, Monaco, monospace',\n              padding: 12,\n              borderRadius: 8,\n              minHeight: 260,\n              maxHeight: 360,\n              overflowY: 'auto',\n              border: '1px solid rgba(255,255,255,0.04)'\n            },\n            children: [attackLog.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                opacity: 0.7\n              },\n              children: \"Console empty \\u2014 perform logins or start the simulation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this) : attackLog.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#9ca3af'\n                },\n                children: [\"[\", entry.ts, \"] \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: entry.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: consoleEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12,\n              display: 'flex',\n              gap: 8,\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-secondary\",\n              onClick: () => {\n                setAttackLog([]);\n                setMessage('Log cleared');\n                pushLog('Attack log cleared');\n              },\n              children: \"Clear Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: 'auto',\n                display: 'flex',\n                gap: 8,\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vp-btn\",\n                onClick: playReplay,\n                disabled: attackLog.length === 0 || isReplaying,\n                children: \"Play Replay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: pauseReplay,\n                disabled: !isReplaying,\n                children: \"Pause\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: stepReplay,\n                children: \"Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: resetReplay,\n                children: \"Reset Replay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Replay Console\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#02040a',\n                color: '#cbd5e1',\n                padding: 10,\n                borderRadius: 8,\n                minHeight: 120,\n                fontFamily: 'ui-monospace, Menlo, Monaco, monospace',\n                overflowY: 'auto'\n              },\n              children: renderReplayConsole()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthenticationSandbox, \"cplZnLh+T8I0t3GvFgRINq6figs=\");\n_c = AuthenticationSandbox;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationSandbox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","LOCAL_USERS_KEY","LOCAL_LOG_KEY","DEFAULT_USERS","username","password","attempts","lockedUntil","MAX_ATTEMPTS","LOCK_DURATION_MS","AuthenticationSandbox","_s","users","setUsers","raw","localStorage","getItem","parsed","JSON","parse","map","u","e","slice","attackLog","setAttackLog","setUsername","setPassword","message","setMessage","isSimulating","setIsSimulating","simCancelRef","consoleEndRef","consoleRef","replayIndex","setReplayIndex","isReplaying","setIsReplaying","replayTimerRef","REPLAY_INTERVAL_MS","setItem","stringify","current","setTimeout","scrollIntoView","behavior","isCurrentlyLocked","user","now","Date","updateUser","pushLog","text","ts","toLocaleTimeString","prev","next","uname","fields","addUser","pwd","some","maskedUsers","pw","masked","length","repeat","Math","max","remaining","lockedNow","handleLogin","_e$preventDefault","preventDefault","call","trim","find","newAttempts","until","handleRegister","_e$preventDefault2","resetDemo","clearInterval","runCredentialStuffingAsync","delayMs","common","targets","Array","from","Set","t","freshUser","Promise","r","x","startSimulation","catch","err","String","stopSimulation","playReplay","setInterval","pauseReplay","stepReplay","min","resetReplay","renderReplayConsole","style","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","shown","fontFamily","i","color","clearAllStorageAndReset","removeItem","className","display","justifyContent","alignItems","maxWidth","margin","gap","textAlign","onSubmit","marginTop","value","onChange","target","placeholder","type","onClick","marginLeft","backgroundColor","border","flexWrap","background","padding","borderRadius","minWidth","fontWeight","fontSize","flexDirection","marginBottom","minHeight","maxHeight","overflowY","entry","ref","disabled","_c","$RefreshReg$"],"sources":["C:/Coding Stuff/XploitSim/XploitSim/src/components/AuthenticationSandbox.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport '../index.css';\r\nimport './VulnerabilityPage.css';\r\n\r\n/*\r\n  Authentication Sandbox (persistent + replay + attempt counters)\r\n  - Dynamic in-memory user store persisted to localStorage\r\n  - Remaining-attempts UI per user\r\n  - Manual login/register affects persisted store and attack log\r\n  - Async credential-stuffing simulator (start/stop) that respects lockouts\r\n  - Attack log persists; \"Replay\" feature replays entries step-by-step\r\n  - Console-style attack log with auto-scroll and timestamps\r\n*/\r\n\r\nconst LOCAL_USERS_KEY = 'xploitsim_users_v1';\r\nconst LOCAL_LOG_KEY = 'xploitsim_attacklog_v1';\r\n\r\nconst DEFAULT_USERS = [\r\n  { username: 'alice', password: 'Password@123', attempts: 0, lockedUntil: 0 },\r\n  { username: 'bob', password: 'qwerty', attempts: 0, lockedUntil: 0 },\r\n  { username: 'admin', password: 'admin123', attempts: 0, lockedUntil: 0 }\r\n];\r\n\r\nconst MAX_ATTEMPTS = 5;\r\nconst LOCK_DURATION_MS = 60 * 1000; // 60 seconds lockout for demo\r\n\r\nexport default function AuthenticationSandbox() {\r\n  // persisted users & logs\r\n  const [users, setUsers] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(LOCAL_USERS_KEY);\r\n      if (raw) {\r\n        const parsed = JSON.parse(raw);\r\n        // ensure schema (old entries get defaults)\r\n        return parsed.map(u => ({ attempts: 0, lockedUntil: 0, ...u }));\r\n      }\r\n    } catch (e) {\r\n      // ignore parse error\r\n    }\r\n    // fallback\r\n    return DEFAULT_USERS.slice();\r\n  });\r\n\r\n  const [attackLog, setAttackLog] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(LOCAL_LOG_KEY);\r\n      if (raw) return JSON.parse(raw);\r\n    } catch (e) {}\r\n    return []; // each entry: { ts, text }\r\n  });\r\n\r\n  // form + UI state\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('Try logging in. Hint: bob / qwerty or admin / admin123');\r\n  const [isSimulating, setIsSimulating] = useState(false);\r\n  const simCancelRef = useRef(false);\r\n  const consoleEndRef = useRef(null);\r\n  const consoleRef = useRef(null); // <-- new: ref to the scrollable console container\r\n\r\n\r\n  // Replay state\r\n  const [replayIndex, setReplayIndex] = useState(0);\r\n  const [isReplaying, setIsReplaying] = useState(false);\r\n  const replayTimerRef = useRef(null);\r\n  const REPLAY_INTERVAL_MS = 700;\r\n\r\n  // persist users & logs when changed\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(LOCAL_USERS_KEY, JSON.stringify(users));\r\n    } catch (e) {}\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(LOCAL_LOG_KEY, JSON.stringify(attackLog));\r\n    } catch (e) {}\r\n  }, [attackLog]);\r\n\r\n  // Auto-scroll console on log update\r\n  useEffect(() => {\r\n    if (consoleEndRef.current) {\r\n      setTimeout(() => {\r\n        consoleEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      }, 25);\r\n    }\r\n  }, [attackLog]);\r\n\r\n  // helper for lock checking & cleaning expired locks\r\n  function isCurrentlyLocked(user) {\r\n    if (!user || !user.lockedUntil) return false;\r\n    const now = Date.now();\r\n    if (user.lockedUntil > now) return true;\r\n    // expired => clear lock (reset attempts too)\r\n    updateUser(user.username, { lockedUntil: 0, attempts: 0 });\r\n    return false;\r\n  }\r\n\r\n  // push a timestamped log entry\r\n  function pushLog(text) {\r\n    const ts = new Date().toLocaleTimeString();\r\n    setAttackLog(prev => {\r\n      const next = [...prev, { ts, text }];\r\n      return next;\r\n    });\r\n  }\r\n\r\n  // update a single user's fields by username\r\n  function updateUser(uname, fields) {\r\n    setUsers(prev => prev.map(u => (u.username === uname ? { ...u, ...fields } : u)));\r\n  }\r\n\r\n  // add user (register)\r\n  function addUser(uname, pwd) {\r\n    setUsers(prev => {\r\n      if (prev.some(u => u.username === uname)) return prev;\r\n      return [...prev, { username: uname, password: pwd, attempts: 0, lockedUntil: 0 }];\r\n    });\r\n  }\r\n\r\n  // masked user view for UI (remaining attempts, locked flag)\r\n  function maskedUsers() {\r\n    return users.map(u => {\r\n      const pw = u.password || '';\r\n      const masked = pw.length <= 2 ? pw : pw[0] + '*'.repeat(Math.max(0, pw.length - 2)) + pw.slice(-1);\r\n      const attempts = u.attempts || 0;\r\n      const remaining = Math.max(0, MAX_ATTEMPTS - attempts);\r\n      const lockedNow = (u.lockedUntil || 0) > Date.now();\r\n      return { username: u.username, masked, remaining, lockedNow, attempts: attempts, lockedUntil: u.lockedUntil || 0 };\r\n    });\r\n  }\r\n\r\n  // Manual login handler\r\n  function handleLogin(e) {\r\n    e?.preventDefault?.();\r\n    const uname = username.trim();\r\n    if (!uname) {\r\n      setMessage('Enter a username.');\r\n      return;\r\n    }\r\n    const user = users.find(u => u.username === uname);\r\n\r\n    if (user && isCurrentlyLocked(user)) {\r\n      setMessage('🔒 Account locked (simulated).');\r\n      pushLog(`Attempted login for ${uname} while locked`);\r\n      return;\r\n    }\r\n\r\n    if (!user) {\r\n      setMessage('❌ Unknown user.');\r\n      pushLog(`Failed login attempt: ${uname} (unknown user)`);\r\n      return;\r\n    }\r\n\r\n    if (user.password === password) {\r\n      setMessage(`✅ Welcome, ${uname}! (Simulated login)`);\r\n      pushLog(`Successful login: ${uname}`);\r\n      // reset attempts on success\r\n      updateUser(uname, { attempts: 0, lockedUntil: 0 });\r\n    } else {\r\n      // failure: increment attempts\r\n      const newAttempts = (user.attempts || 0) + 1;\r\n      if (newAttempts >= MAX_ATTEMPTS) {\r\n        const until = Date.now() + LOCK_DURATION_MS;\r\n        updateUser(uname, { attempts: newAttempts, lockedUntil: until });\r\n        setMessage('🔒 Too many failed attempts — account locked (simulated).');\r\n        pushLog(`Failed login attempt: ${uname} (attempt ${newAttempts})`);\r\n        pushLog(`Account ${uname} locked until ${new Date(until).toLocaleTimeString()}`);\r\n      } else {\r\n        updateUser(uname, { attempts: newAttempts });\r\n        setMessage('❌ Invalid username or password.');\r\n        pushLog(`Failed login attempt: ${uname} (attempt ${newAttempts})`);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Register (in-memory)\r\n  function handleRegister(e) {\r\n    e?.preventDefault?.();\r\n    const uname = username.trim();\r\n    if (!uname || !password) {\r\n      setMessage('Enter username and password to register.');\r\n      return;\r\n    }\r\n    if (users.some(u => u.username === uname)) {\r\n      setMessage('User already exists. Try another username.');\r\n      pushLog(`Registration failed: ${uname} already exists`);\r\n      return;\r\n    }\r\n    addUser(uname, password);\r\n    setMessage(`✅ Registered ${uname} (in-memory).`);\r\n    pushLog(`Registered new user: ${uname}`);\r\n  }\r\n\r\n  // Reset demo - clears attempts & logs but keeps registered users\r\n  function resetDemo() {\r\n    setUsers(prev => prev.map(u => ({ ...u, attempts: 0, lockedUntil: 0 })));\r\n    setAttackLog([]);\r\n    setMessage('Demo reset. Users retained (registered).');\r\n    setIsSimulating(false);\r\n    simCancelRef.current = false;\r\n    setReplayIndex(0);\r\n    setIsReplaying(false);\r\n    if (replayTimerRef.current) {\r\n      clearInterval(replayTimerRef.current);\r\n      replayTimerRef.current = null;\r\n    }\r\n    pushLog('Demo reset (attempts and log cleared).');\r\n  }\r\n\r\n  // Async credential stuffing simulation: respects lockouts and updates per-user attempts & locks\r\n  async function runCredentialStuffingAsync({ delayMs = 300 } = {}) {\r\n    const common = ['123456', 'password', 'qwerty', 'admin', 'admin123'];\r\n    // targets: current usernames plus a couple of extras\r\n    const targets = Array.from(new Set([...users.map(u => u.username), 'carol', 'dave']));\r\n\r\n    setIsSimulating(true);\r\n    simCancelRef.current = false;\r\n    pushLog('--- Credential Stuffing Simulation started ---');\r\n\r\n    for (const t of targets) {\r\n      if (simCancelRef.current) break;\r\n\r\n      // fetch fresh user snapshot from state\r\n      const freshUser = users.find(u => u.username === t);\r\n\r\n      // If user exists and locked, log as locked and skip tries for this user\r\n      if (freshUser && isCurrentlyLocked(freshUser)) {\r\n        pushLog(`${t}: <LOCKED> (simulation respects lockout)`);\r\n        continue;\r\n      }\r\n\r\n      for (const pw of common) {\r\n        if (simCancelRef.current) break;\r\n\r\n        await new Promise(r => setTimeout(r, delayMs));\r\n\r\n        // refetch user in case manual actions changed the store\r\n        const u = users.find(x => x.username === t);\r\n\r\n        if (!u) {\r\n          pushLog(`${t}:${pw} -> FAIL (no such user)`);\r\n          continue;\r\n        }\r\n\r\n        if (isCurrentlyLocked(u)) {\r\n          pushLog(`${t}:${pw} -> FAIL (LOCKED)`);\r\n          continue;\r\n        }\r\n\r\n        if (u.password === pw) {\r\n          // success: reset attempts and log success\r\n          updateUser(u.username, { attempts: 0, lockedUntil: 0 });\r\n          pushLog(`${t}:${pw} -> SUCCESS`);\r\n        } else {\r\n          // failed attempt: increment attempts & maybe lock\r\n          const newAttempts = (u.attempts || 0) + 1;\r\n          if (newAttempts >= MAX_ATTEMPTS) {\r\n            const until = Date.now() + LOCK_DURATION_MS;\r\n            updateUser(u.username, { attempts: newAttempts, lockedUntil: until });\r\n            pushLog(`${t}:${pw} -> FAIL (attempt ${newAttempts})`);\r\n            pushLog(`${t} locked until ${new Date(until).toLocaleTimeString()}`);\r\n          } else {\r\n            updateUser(u.username, { attempts: newAttempts });\r\n            pushLog(`${t}:${pw} -> FAIL (attempt ${newAttempts})`);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (simCancelRef.current) {\r\n      pushLog('--- Credential Stuffing Simulation stopped by user ---');\r\n    } else {\r\n      pushLog('--- Credential Stuffing Simulation completed ---');\r\n    }\r\n    setIsSimulating(false);\r\n    simCancelRef.current = false;\r\n  }\r\n\r\n  function startSimulation() {\r\n    if (isSimulating) return;\r\n    // ensure we use fresh users state inside async loop by referencing state variable inside loop — okay because we re-read users on each iteration\r\n    runCredentialStuffingAsync({ delayMs: 240 }).catch(err => {\r\n      pushLog(`Simulation error: ${String(err)}`);\r\n      setIsSimulating(false);\r\n      simCancelRef.current = false;\r\n    });\r\n  }\r\n\r\n  function stopSimulation() {\r\n    if (!isSimulating) return;\r\n    simCancelRef.current = true;\r\n    setIsSimulating(false);\r\n  }\r\n\r\n  // Replay controls\r\n  function playReplay() {\r\n    if (isReplaying || attackLog.length === 0) return;\r\n    setIsReplaying(true);\r\n    setReplayIndex(0);\r\n    replayTimerRef.current = setInterval(() => {\r\n      setReplayIndex(prev => {\r\n        const next = prev + 1;\r\n        if (next >= attackLog.length) {\r\n          clearInterval(replayTimerRef.current);\r\n          replayTimerRef.current = null;\r\n          setIsReplaying(false);\r\n          return attackLog.length;\r\n        }\r\n        return next;\r\n      });\r\n    }, REPLAY_INTERVAL_MS);\r\n  }\r\n\r\n  function pauseReplay() {\r\n    if (replayTimerRef.current) {\r\n      clearInterval(replayTimerRef.current);\r\n      replayTimerRef.current = null;\r\n    }\r\n    setIsReplaying(false);\r\n  }\r\n\r\n  function stepReplay() {\r\n    setReplayIndex(prev => Math.min(attackLog.length, prev + 1));\r\n  }\r\n\r\n  function resetReplay() {\r\n    pauseReplay();\r\n    setReplayIndex(0);\r\n  }\r\n\r\n  // render a \"replay console\" that shows entries up to replayIndex\r\n  function renderReplayConsole() {\r\n    if (attackLog.length === 0) {\r\n      return <div style={{ opacity: 0.7 }}>No entries to replay.</div>;\r\n    }\r\n    const shown = attackLog.slice(0, replayIndex);\r\n    return (\r\n      <div style={{ fontFamily: 'ui-monospace, Menlo, Monaco, monospace' }}>\r\n        {shown.length === 0 ? <div style={{ opacity: 0.7 }}>Replay paused (no entries shown yet).</div> :\r\n          shown.map((e, i) => (<div key={i}><span style={{ color: '#9ca3af' }}>[{e.ts}] </span><span>{e.text}</span></div>))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // small helper to clear persisted state entirely (dangerous) - used optionally in dev\r\n  function clearAllStorageAndReset() {\r\n    localStorage.removeItem(LOCAL_USERS_KEY);\r\n    localStorage.removeItem(LOCAL_LOG_KEY);\r\n    setUsers(DEFAULT_USERS.map(u => ({ ...u, attempts: 0, lockedUntil: 0 })));\r\n    setAttackLog([]);\r\n    setMessage('Cleared stored data; reset to defaults.');\r\n    setReplayIndex(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"vp-page vp-auth-sandbox\">\r\n      <section className=\"vp-hero\">\r\n        <div className=\"vp-hero-content\">\r\n          <div className=\"vp-hero-text\">\r\n            <div className=\"vp-badge\">A02:2021</div>\r\n            <h1 className=\"vp-title\">Authentication Failures — Sandbox (Persistent)</h1>\r\n            <p className=\"vp-subtitle\">Dynamic users, persisted store, lockout-aware simulator, and replay controls. Runs in-browser only.</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <main className=\"vp-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>\r\n        <div className=\"vp-grid\" style={{ maxWidth: 1100, margin: '0 auto', gap: 16 }}>\r\n\r\n          {/* LEFT: controls */}\r\n          <div className=\"vp-card\" style={{ textAlign: 'center' }}>\r\n            <h3>Login / Register</h3>\r\n            <form onSubmit={handleLogin} className=\"vp-form\" style={{ marginTop: 8 }}>\r\n              <label>Username</label>\r\n              <input value={username} onChange={e => setUsername(e.target.value)} placeholder=\"username\" className=\"vp-input\" />\r\n              <label>Password</label>\r\n              <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"password\" className=\"vp-input\" />\r\n              <div style={{ marginTop: 12 }}>\r\n                <button className=\"vp-btn\" type=\"submit\">Login</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"vp-btn vp-btn-secondary\"\r\n                  onClick={handleRegister}\r\n                  style={{\r\n                    marginLeft: 8,\r\n                    backgroundColor: '#444',\r\n                    color: 'white',\r\n                    border: '1px solid #777',\r\n                  }}\r\n                >\r\n                  Register (in-memory)\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"vp-btn vp-btn-secondary\"\r\n                  onClick={resetDemo}\r\n                  style={{\r\n                    marginLeft: 8,\r\n                    backgroundColor: '#444',\r\n                    color: 'white',\r\n                    border: '1px solid #777',\r\n                  }}\r\n                >\r\n                  Reset Demo\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <p className=\"vp-note\" style={{ marginTop: 10 }}>{message}</p>\r\n\r\n            <div style={{ marginTop: 12, display: 'flex', justifyContent: 'center', gap: 8 }}>\r\n              {!isSimulating ? (\r\n                <button className=\"vp-btn vp-btn-danger\" onClick={startSimulation}>Start Credential Stuffing</button>\r\n              ) : (\r\n                <button className=\"vp-btn vp-btn-secondary\" onClick={stopSimulation}>Stop Simulation</button>\r\n              )}\r\n              <button className=\"vp-btn vp-btn-secondary\" onClick={() => { pushLog('Manual log entry added'); }}>Ping Log</button>\r\n            </div>\r\n\r\n            <div style={{ marginTop: 16 }}>\r\n              <h4>Registered Users</h4>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: 10, justifyContent: 'center', marginTop: 8 }}>\r\n                {maskedUsers().map(u => (\r\n                  <div key={u.username} style={{ background: 'rgba(255,255,255,0.02)', padding: '8px 12px', borderRadius: 10, minWidth: 110 }}>\r\n                    <div style={{ fontWeight: 700 }}>{u.username}{u.lockedNow ? ' 🔒' : ''}</div>\r\n                    <div style={{ fontSize: 12, opacity: 0.9 }}>{u.masked}</div>\r\n                    <div style={{ marginTop: 6, fontSize: 13 }}>\r\n                      Attempts: <strong>{u.attempts}</strong>\r\n                      <div style={{ fontSize: 12, opacity: 0.8 }}>\r\n                        Remaining: <strong>{u.remaining}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: 10 }}>\r\n              <button className=\"vp-btn vp-btn-secondary\" onClick={clearAllStorageAndReset}>Clear Stored Data (dev)</button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* RIGHT: log + replay console */}\r\n          <div className=\"vp-card\" style={{ display: 'flex', flexDirection: 'column', textAlign: 'left' }}>\r\n            <h3 style={{ marginBottom: 8 }}>Attack Log — Console</h3>\r\n\r\n            <div className=\"vp-log\" style={{\r\n              background: '#0b1020',\r\n              color: '#d1d5db',\r\n              fontFamily: 'ui-monospace, Menlo, Monaco, monospace',\r\n              padding: 12,\r\n              borderRadius: 8,\r\n              minHeight: 260,\r\n              maxHeight: 360,\r\n              overflowY: 'auto',\r\n              border: '1px solid rgba(255,255,255,0.04)'\r\n            }}>\r\n              {attackLog.length === 0 ? (\r\n                <div style={{ opacity: 0.7 }}>Console empty — perform logins or start the simulation.</div>\r\n              ) : (\r\n                attackLog.map((entry, i) => (\r\n                  <div key={i} style={{ marginBottom: 6 }}>\r\n                    <span style={{ color: '#9ca3af' }}>[{entry.ts}] </span>\r\n                    <span>{entry.text}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <div ref={consoleEndRef} />\r\n            </div>\r\n\r\n            <div style={{ marginTop: 12, display: 'flex', gap: 8, alignItems: 'center' }}>\r\n              <button className=\"vp-btn vp-btn-secondary\" onClick={() => { setAttackLog([]); setMessage('Log cleared'); pushLog('Attack log cleared'); }}>Clear Log</button>\r\n\r\n              {/* Replay controls */}\r\n              <div style={{ marginLeft: 'auto', display: 'flex', gap: 8, alignItems: 'center' }}>\r\n                <button className=\"vp-btn\" onClick={playReplay} disabled={attackLog.length === 0 || isReplaying}>Play Replay</button>\r\n                <button className=\"vp-btn vp-btn-secondary\" onClick={pauseReplay} disabled={!isReplaying}>Pause</button>\r\n                <button className=\"vp-btn vp-btn-secondary\" onClick={stepReplay}>Step</button>\r\n                <button className=\"vp-btn vp-btn-secondary\" onClick={resetReplay}>Reset Replay</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: 12 }}>\r\n              <h4>Replay Console</h4>\r\n              <div style={{\r\n                background: '#02040a',\r\n                color: '#cbd5e1',\r\n                padding: 10,\r\n                borderRadius: 8,\r\n                minHeight: 120,\r\n                fontFamily: 'ui-monospace, Menlo, Monaco, monospace',\r\n                overflowY: 'auto'\r\n              }}>\r\n                {renderReplayConsole()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}