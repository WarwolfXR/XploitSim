{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Stuff\\\\XploitSim\\\\XploitSim\\\\src\\\\components\\\\AuthenticationSandbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../index.css';\nimport './VulnerabilityPage.css';\n\n/*\r\n  Authentication Sandbox (enhanced)\r\n  - Dynamic in-memory user store (register users)\r\n  - Manual login attempts always append to attack log\r\n  - Async credential-stuffing simulator with start/stop\r\n  - Console-style attack log with auto-scroll and timestamps\r\n  - All styling uses existing vp-* classes (VulnerabilityPage.css)\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUsers = [{\n  username: 'alice',\n  password: 'Password@123'\n}, {\n  username: 'bob',\n  password: 'qwerty'\n},\n// intentionally weak\n{\n  username: 'admin',\n  password: 'admin123'\n} // intentionally default\n];\nexport default function AuthenticationSandbox() {\n  _s();\n  const [users, setUsers] = useState(initialUsers);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('Try logging in. Hint: bob / qwerty or admin / admin123');\n  const [attempts, setAttempts] = useState(0);\n  const [attackLog, setAttackLog] = useState([]); // each entry: {ts, text}\n  const [isLocked, setIsLocked] = useState(false);\n\n  // Simulation state\n  const [isSimulating, setIsSimulating] = useState(false);\n  const simCancelRef = useRef(false);\n\n  // Console scroll\n  const consoleEndRef = useRef(null);\n\n  // helper to push a timestamped log entry\n  function pushLog(text) {\n    const ts = new Date().toLocaleTimeString();\n    setAttackLog(prev => [...prev, {\n      ts,\n      text\n    }]);\n  }\n\n  // auto-scroll to bottom when attackLog changes\n  useEffect(() => {\n    if (consoleEndRef.current) {\n      // small timeout to ensure element rendered\n      setTimeout(() => {\n        consoleEndRef.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'end'\n        });\n      }, 30);\n    }\n  }, [attackLog]);\n\n  // Manual login handler (always appends to attack log; works after simulation)\n  function handleLogin(e) {\n    var _e$preventDefault;\n    e === null || e === void 0 ? void 0 : (_e$preventDefault = e.preventDefault) === null || _e$preventDefault === void 0 ? void 0 : _e$preventDefault.call(e);\n    if (isLocked) {\n      setMessage('Account is temporarily locked due to too many attempts (simulated).');\n      pushLog(`Attempted login for ${username} while account locked`);\n      return;\n    }\n    setAttempts(a => a + 1);\n    const found = users.find(u => u.username === username && u.password === password);\n    if (found) {\n      setMessage(`✅ Welcome, ${username}! (Simulated login)`);\n      pushLog(`Successful login: ${username}`);\n    } else {\n      setMessage('❌ Invalid username or password.');\n      pushLog(`Failed login attempt: ${username}`);\n    }\n\n    // simulated lockout threshold (5) — if reached, mark locked\n    if (attempts + 1 >= 5) {\n      setIsLocked(true);\n      setMessage('🔒 Too many failed attempts — account locked (simulated).');\n      pushLog(`Account lockout triggered (simulated) after ${attempts + 1} failures`);\n    }\n  }\n\n  // Allow registering new users dynamically\n  function handleRegister(e) {\n    var _e$preventDefault2;\n    e === null || e === void 0 ? void 0 : (_e$preventDefault2 = e.preventDefault) === null || _e$preventDefault2 === void 0 ? void 0 : _e$preventDefault2.call(e);\n    if (!username || !password) {\n      setMessage('Enter username and password to register.');\n      return;\n    }\n    if (users.some(u => u.username === username)) {\n      setMessage('User already exists. Try another username.');\n      pushLog(`Registration failed: ${username} already exists`);\n      return;\n    }\n    // add user to in-memory list\n    setUsers(prev => [...prev, {\n      username,\n      password\n    }]);\n    setMessage(`✅ Registered ${username} (in-memory).`);\n    pushLog(`Registered new user: ${username}`);\n    // keep fields for quick login testing\n  }\n\n  // Reset demo state (does not delete registered users; resets attempts/log)\n  function resetDemo() {\n    setUsername('');\n    setPassword('');\n    setMessage('Try logging in. Hint: bob / qwerty or admin / admin123');\n    setAttempts(0);\n    setAttackLog([]);\n    setIsLocked(false);\n    setIsSimulating(false);\n    simCancelRef.current = false;\n    pushLog('Demo reset');\n  }\n\n  // credential-stuffing simulation (async, cancellable)\n  async function runCredentialStuffingAsync({\n    delayMs = 300\n  } = {}) {\n    // small lists for demo\n    const common = ['123456', 'password', 'qwerty', 'admin', 'admin123'];\n    // Use current users' usernames + some common targets\n    const targets = Array.from(new Set([...users.map(u => u.username), 'carol', 'dave']));\n    setIsSimulating(true);\n    simCancelRef.current = false;\n    pushLog('--- Credential Stuffing Simulation started ---');\n    for (let t of targets) {\n      if (simCancelRef.current) break;\n      for (let pw of common) {\n        if (simCancelRef.current) break;\n\n        // emulate network delay\n        await new Promise(r => setTimeout(r, delayMs));\n        const success = users.some(u => u.username === t && u.password === pw);\n        const text = `${t}:${pw} -> ${success ? 'SUCCESS' : 'FAIL'}`;\n        pushLog(text);\n      }\n    }\n    if (simCancelRef.current) {\n      pushLog('--- Credential Stuffing Simulation stopped by user ---');\n    } else {\n      pushLog('--- Credential Stuffing Simulation completed ---');\n    }\n    setIsSimulating(false);\n    simCancelRef.current = false;\n  }\n  function startSimulation() {\n    if (isSimulating) return;\n    runCredentialStuffingAsync({\n      delayMs: 250\n    }).catch(err => {\n      pushLog(`Simulation error: ${String(err)}`);\n      setIsSimulating(false);\n      simCancelRef.current = false;\n    });\n  }\n  function stopSimulation() {\n    if (!isSimulating) return;\n    simCancelRef.current = true;\n    setIsSimulating(false); // UI flag; actual async loop checks simCancelRef\n  }\n\n  // small helper to display masked users (for teaching)\n  function maskedUsers() {\n    return users.map(u => ({\n      username: u.username,\n      password: u.password.length > 2 ? u.password[0] + '*'.repeat(Math.max(0, u.password.length - 2)) + u.password.slice(-1) : u.password\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vp-page vp-auth-sandbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"vp-hero\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vp-hero-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vp-hero-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vp-badge\",\n            children: \"A02:2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"vp-title\",\n            children: \"Authentication Failures \\u2014 Sandbox (Enhanced)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vp-subtitle\",\n            children: \"Interactive demo with dynamic users and a cancellable credential-stuffing simulator. Everything runs in-browser for safe learning.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"vp-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vp-grid\",\n        style: {\n          maxWidth: 1000,\n          margin: '0 auto',\n          gap: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vp-card\",\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login / Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            className: \"vp-form\",\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"username\",\n              className: \"vp-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"password\",\n              className: \"vp-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vp-btn\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: handleRegister,\n                style: {\n                  marginLeft: 8\n                },\n                children: \"Register (in-memory)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"vp-btn vp-btn-secondary\",\n                onClick: resetDemo,\n                style: {\n                  marginLeft: 8\n                },\n                children: \"Reset Demo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vp-note\",\n            style: {\n              marginTop: 10\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12,\n              display: 'flex',\n              justifyContent: 'center',\n              gap: 8\n            },\n            children: !isSimulating ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-danger\",\n              onClick: startSimulation,\n              children: \"Start Credential Stuffing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vp-btn vp-btn-secondary\",\n              onClick: stopSimulation,\n              children: \"Stop Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Registered Users (masked)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 12,\n                flexWrap: 'wrap',\n                marginTop: 8\n              },\n              children: maskedUsers().map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: 'rgba(255,255,255,0.02)',\n                  padding: '6px 10px',\n                  borderRadius: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: u.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12\n                  },\n                  children: u.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 50\n                }, this)]\n              }, u.username, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vp-card\",\n          style: {\n            textAlign: 'left',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 8\n            },\n            children: \"Attack Log \\u2014 Console\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vp-log\",\n            style: {\n              background: '#0b1020',\n              color: '#d1d5db',\n              fontFamily: 'ui-monospace, SFMono-Regular, Menlo, Monaco, \"Roboto Mono\", monospace',\n              padding: '12px',\n              borderRadius: 8,\n              minHeight: 260,\n              maxHeight: 420,\n              overflowY: 'auto',\n              border: '1px solid rgba(255,255,255,0.04)'\n            },\n            children: [attackLog.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                opacity: 0.7\n              },\n              children: \"Console empty \\u2014 perform logins or start the simulation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this) : attackLog.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#9ca3af'\n                },\n                children: [\"[\", entry.ts, \"] \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: entry.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: consoleEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), \" Simulation runs asynchronously and can be stopped at any time. Manual login attempts always append to this console. The demo is ephemeral and runs only in your browser.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthenticationSandbox, \"nCu338UouqvnuPcS6gBuVI8VJsc=\");\n_c = AuthenticationSandbox;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationSandbox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","initialUsers","username","password","AuthenticationSandbox","_s","users","setUsers","setUsername","setPassword","message","setMessage","attempts","setAttempts","attackLog","setAttackLog","isLocked","setIsLocked","isSimulating","setIsSimulating","simCancelRef","consoleEndRef","pushLog","text","ts","Date","toLocaleTimeString","prev","current","setTimeout","scrollIntoView","behavior","block","handleLogin","e","_e$preventDefault","preventDefault","call","a","found","find","u","handleRegister","_e$preventDefault2","some","resetDemo","runCredentialStuffingAsync","delayMs","common","targets","Array","from","Set","map","t","pw","Promise","r","success","startSimulation","catch","err","String","stopSimulation","maskedUsers","length","repeat","Math","max","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","maxWidth","margin","gap","textAlign","onSubmit","marginTop","value","onChange","target","placeholder","type","onClick","marginLeft","flexWrap","background","padding","borderRadius","fontSize","flexDirection","marginBottom","color","fontFamily","minHeight","maxHeight","overflowY","border","opacity","entry","i","ref","_c","$RefreshReg$"],"sources":["C:/Coding Stuff/XploitSim/XploitSim/src/components/AuthenticationSandbox.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport '../index.css';\r\nimport './VulnerabilityPage.css';\r\n\r\n/*\r\n  Authentication Sandbox (enhanced)\r\n  - Dynamic in-memory user store (register users)\r\n  - Manual login attempts always append to attack log\r\n  - Async credential-stuffing simulator with start/stop\r\n  - Console-style attack log with auto-scroll and timestamps\r\n  - All styling uses existing vp-* classes (VulnerabilityPage.css)\r\n*/\r\n\r\nconst initialUsers = [\r\n  { username: 'alice', password: 'Password@123' },\r\n  { username: 'bob', password: 'qwerty' }, // intentionally weak\r\n  { username: 'admin', password: 'admin123' } // intentionally default\r\n];\r\n\r\nexport default function AuthenticationSandbox() {\r\n  const [users, setUsers] = useState(initialUsers);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('Try logging in. Hint: bob / qwerty or admin / admin123');\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [attackLog, setAttackLog] = useState([]); // each entry: {ts, text}\r\n  const [isLocked, setIsLocked] = useState(false);\r\n\r\n  // Simulation state\r\n  const [isSimulating, setIsSimulating] = useState(false);\r\n  const simCancelRef = useRef(false);\r\n\r\n  // Console scroll\r\n  const consoleEndRef = useRef(null);\r\n\r\n  // helper to push a timestamped log entry\r\n  function pushLog(text) {\r\n    const ts = new Date().toLocaleTimeString();\r\n    setAttackLog(prev => [...prev, { ts, text }]);\r\n  }\r\n\r\n  // auto-scroll to bottom when attackLog changes\r\n  useEffect(() => {\r\n    if (consoleEndRef.current) {\r\n      // small timeout to ensure element rendered\r\n      setTimeout(() => {\r\n        consoleEndRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n      }, 30);\r\n    }\r\n  }, [attackLog]);\r\n\r\n  // Manual login handler (always appends to attack log; works after simulation)\r\n  function handleLogin(e) {\r\n    e?.preventDefault?.();\r\n    if (isLocked) {\r\n      setMessage('Account is temporarily locked due to too many attempts (simulated).');\r\n      pushLog(`Attempted login for ${username} while account locked`);\r\n      return;\r\n    }\r\n\r\n    setAttempts(a => a + 1);\r\n    const found = users.find(u => u.username === username && u.password === password);\r\n\r\n    if (found) {\r\n      setMessage(`✅ Welcome, ${username}! (Simulated login)`);\r\n      pushLog(`Successful login: ${username}`);\r\n    } else {\r\n      setMessage('❌ Invalid username or password.');\r\n      pushLog(`Failed login attempt: ${username}`);\r\n    }\r\n\r\n    // simulated lockout threshold (5) — if reached, mark locked\r\n    if (attempts + 1 >= 5) {\r\n      setIsLocked(true);\r\n      setMessage('🔒 Too many failed attempts — account locked (simulated).');\r\n      pushLog(`Account lockout triggered (simulated) after ${attempts + 1} failures`);\r\n    }\r\n  }\r\n\r\n  // Allow registering new users dynamically\r\n  function handleRegister(e) {\r\n    e?.preventDefault?.();\r\n    if (!username || !password) {\r\n      setMessage('Enter username and password to register.');\r\n      return;\r\n    }\r\n    if (users.some(u => u.username === username)) {\r\n      setMessage('User already exists. Try another username.');\r\n      pushLog(`Registration failed: ${username} already exists`);\r\n      return;\r\n    }\r\n    // add user to in-memory list\r\n    setUsers(prev => [...prev, { username, password }]);\r\n    setMessage(`✅ Registered ${username} (in-memory).`);\r\n    pushLog(`Registered new user: ${username}`);\r\n    // keep fields for quick login testing\r\n  }\r\n\r\n  // Reset demo state (does not delete registered users; resets attempts/log)\r\n  function resetDemo() {\r\n    setUsername('');\r\n    setPassword('');\r\n    setMessage('Try logging in. Hint: bob / qwerty or admin / admin123');\r\n    setAttempts(0);\r\n    setAttackLog([]);\r\n    setIsLocked(false);\r\n    setIsSimulating(false);\r\n    simCancelRef.current = false;\r\n    pushLog('Demo reset');\r\n  }\r\n\r\n  // credential-stuffing simulation (async, cancellable)\r\n  async function runCredentialStuffingAsync({ delayMs = 300 } = {}) {\r\n    // small lists for demo\r\n    const common = ['123456', 'password', 'qwerty', 'admin', 'admin123'];\r\n    // Use current users' usernames + some common targets\r\n    const targets = Array.from(new Set([...users.map(u => u.username), 'carol', 'dave']));\r\n\r\n    setIsSimulating(true);\r\n    simCancelRef.current = false;\r\n    pushLog('--- Credential Stuffing Simulation started ---');\r\n\r\n    for (let t of targets) {\r\n      if (simCancelRef.current) break;\r\n      for (let pw of common) {\r\n        if (simCancelRef.current) break;\r\n\r\n        // emulate network delay\r\n        await new Promise(r => setTimeout(r, delayMs));\r\n\r\n        const success = users.some(u => u.username === t && u.password === pw);\r\n        const text = `${t}:${pw} -> ${success ? 'SUCCESS' : 'FAIL'}`;\r\n        pushLog(text);\r\n      }\r\n    }\r\n\r\n    if (simCancelRef.current) {\r\n      pushLog('--- Credential Stuffing Simulation stopped by user ---');\r\n    } else {\r\n      pushLog('--- Credential Stuffing Simulation completed ---');\r\n    }\r\n    setIsSimulating(false);\r\n    simCancelRef.current = false;\r\n  }\r\n\r\n  function startSimulation() {\r\n    if (isSimulating) return;\r\n    runCredentialStuffingAsync({ delayMs: 250 }).catch(err => {\r\n      pushLog(`Simulation error: ${String(err)}`);\r\n      setIsSimulating(false);\r\n      simCancelRef.current = false;\r\n    });\r\n  }\r\n\r\n  function stopSimulation() {\r\n    if (!isSimulating) return;\r\n    simCancelRef.current = true;\r\n    setIsSimulating(false); // UI flag; actual async loop checks simCancelRef\r\n  }\r\n\r\n  // small helper to display masked users (for teaching)\r\n  function maskedUsers() {\r\n    return users.map(u => ({\r\n      username: u.username,\r\n      password: u.password.length > 2 ? u.password[0] + '*'.repeat(Math.max(0, u.password.length - 2)) + u.password.slice(-1) : u.password\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"vp-page vp-auth-sandbox\">\r\n      <section className=\"vp-hero\">\r\n        <div className=\"vp-hero-content\">\r\n          <div className=\"vp-hero-text\">\r\n            <div className=\"vp-badge\">A02:2021</div>\r\n            <h1 className=\"vp-title\">Authentication Failures — Sandbox (Enhanced)</h1>\r\n            <p className=\"vp-subtitle\">\r\n              Interactive demo with dynamic users and a cancellable credential-stuffing simulator.\r\n              Everything runs in-browser for safe learning.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <main className=\"vp-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>\r\n        <div className=\"vp-grid\" style={{ maxWidth: 1000, margin: '0 auto', gap: 16 }}>\r\n          <div className=\"vp-card\" style={{ textAlign: 'center' }}>\r\n            <h3>Login / Register</h3>\r\n\r\n            <form onSubmit={handleLogin} className=\"vp-form\" style={{ marginTop: 8 }}>\r\n              <label>Username</label>\r\n              <input value={username} onChange={e => setUsername(e.target.value)} placeholder=\"username\" className=\"vp-input\" />\r\n              <label>Password</label>\r\n              <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"password\" className=\"vp-input\" />\r\n              <div style={{ marginTop: 12 }}>\r\n                <button className=\"vp-btn\" type=\"submit\">Login</button>\r\n                <button type=\"button\" className=\"vp-btn vp-btn-secondary\" onClick={handleRegister} style={{ marginLeft: 8 }}>\r\n                  Register (in-memory)\r\n                </button>\r\n                <button type=\"button\" className=\"vp-btn vp-btn-secondary\" onClick={resetDemo} style={{ marginLeft: 8 }}>\r\n                  Reset Demo\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <p className=\"vp-note\" style={{ marginTop: 10 }}>{message}</p>\r\n\r\n            <div style={{ marginTop: 12, display: 'flex', justifyContent: 'center', gap: 8 }}>\r\n              {!isSimulating ? (\r\n                <button className=\"vp-btn vp-btn-danger\" onClick={startSimulation}>Start Credential Stuffing</button>\r\n              ) : (\r\n                <button className=\"vp-btn vp-btn-secondary\" onClick={stopSimulation}>Stop Simulation</button>\r\n              )}\r\n            </div>\r\n\r\n            <div style={{ marginTop: 12 }}>\r\n              <h4>Registered Users (masked)</h4>\r\n              <div style={{ display: 'flex', justifyContent: 'center', gap: 12, flexWrap: 'wrap', marginTop: 8 }}>\r\n                {maskedUsers().map(u => (\r\n                  <div key={u.username} style={{ background: 'rgba(255,255,255,0.02)', padding: '6px 10px', borderRadius: 8 }}>\r\n                    <strong>{u.username}</strong><div style={{ fontSize: 12 }}>{u.password}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"vp-card\" style={{ textAlign: 'left', display: 'flex', flexDirection: 'column' }}>\r\n            <h3 style={{ marginBottom: 8 }}>Attack Log — Console</h3>\r\n\r\n            <div\r\n              className=\"vp-log\"\r\n              style={{\r\n                background: '#0b1020',\r\n                color: '#d1d5db',\r\n                fontFamily: 'ui-monospace, SFMono-Regular, Menlo, Monaco, \"Roboto Mono\", monospace',\r\n                padding: '12px',\r\n                borderRadius: 8,\r\n                minHeight: 260,\r\n                maxHeight: 420,\r\n                overflowY: 'auto',\r\n                border: '1px solid rgba(255,255,255,0.04)'\r\n              }}\r\n            >\r\n              {attackLog.length === 0 ? (\r\n                <div style={{ opacity: 0.7 }}>Console empty — perform logins or start the simulation.</div>\r\n              ) : (\r\n                attackLog.map((entry, i) => (\r\n                  <div key={i} style={{ marginBottom: 6 }}>\r\n                    <span style={{ color: '#9ca3af' }}>[{entry.ts}] </span>\r\n                    <span>{entry.text}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n\r\n              {/* sentinel element for auto-scroll */}\r\n              <div ref={consoleEndRef} />\r\n            </div>\r\n\r\n            <div style={{ marginTop: 12 }}>\r\n              <p style={{ margin: 0 }}>\r\n                <strong>Notes:</strong> Simulation runs asynchronously and can be stopped at any time.\r\n                Manual login attempts always append to this console. The demo is ephemeral and runs only in your browser.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}